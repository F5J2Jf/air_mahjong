{"version":3,"sources":["assets\\Script\\IntoRoom.js"],"names":["cc","Class","extends","Component","properties","label","Label","str","onLoad","fill","i","length","string","onKey","event","value","substr","console","log","onClose","node","destroy"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO,CAACL,GAAGM,KAAJ,CADC;AAERC,aAAK;AAFG,KAHP;;AAQL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,IAAL;AACH,KAXI;AAYL;;AAEAA,UAAM,gBAAY;AACd,aAAKC,IAAI,CAAT,EAAYA,IAAI,KAAKL,KAAL,CAAWM,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,iBAAKL,KAAL,CAAWK,CAAX,EAAcE,MAAd,GAAuB,KAAKL,GAAL,CAASG,CAAT,CAAvB;AACH;AACJ,KAlBI;;AAoBLG,WAAO,eAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC3B,gBAAQA,KAAR;AACI,iBAAK,GAAL;AACI,oBAAI,KAAKR,GAAL,CAASI,MAAT,GAAkB,CAAtB,EAAyB;AACrB,yBAAKJ,GAAL,GAAW,KAAKA,GAAL,CAASS,MAAT,CAAgB,CAAhB,EAAmB,KAAKT,GAAL,CAASI,MAAT,GAAkB,CAArC,CAAX;AACH,iBAFD,MAEO;AACH;AACH;AACD;AACJ,iBAAK,GAAL;AACI,qBAAKJ,GAAL,GAAW,EAAX;AACA;AACJ;AACI,oBAAI,KAAKA,GAAL,CAASI,MAAT,GAAkB,KAAKN,KAAL,CAAWM,MAAjC,EAAyC;AACrC,yBAAKJ,GAAL,IAAYQ,KAAZ;AACH,iBAFD,MAEO;AACH;AACH;;AAhBT;AAmBA,aAAKN,IAAL;AACAQ,gBAAQC,GAAR,CAAY,KAAKX,GAAjB;AACH,KA1CI;;AA4CLY,aAAS,mBAAY;AACjB,aAAKC,IAAL,CAAUC,OAAV;AACH;AA9CI,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        label: [cc.Label],\r\n        str: \"\",\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.fill();\r\n    },\r\n    //str: \"\",\r\n\r\n    fill: function () {\r\n        for (i = 0; i < this.label.length; i++) {\r\n            this.label[i].string = this.str[i];\r\n        }\r\n    },\r\n\r\n    onKey: function (event, value) {\r\n        switch (value) {\r\n            case 'D':\r\n                if (this.str.length > 0) {\r\n                    this.str = this.str.substr(0, this.str.length - 1);\r\n                } else {\r\n                    return;\r\n                }\r\n                break;\r\n            case 'C':\r\n                this.str = \"\";\r\n                break;\r\n            default:\r\n                if (this.str.length < this.label.length) {\r\n                    this.str += value;\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n        }\r\n        this.fill();\r\n        console.log(this.str);\r\n    },\r\n\r\n    onClose: function () {\r\n        this.node.destroy();\r\n    }\r\n});\r\n"]}