const { ccclass, property } = cc._decorator;

import Global from "../utils/Global";
import Protocol from "../net/Protocol";
import Data from "../net/Data";
import Table from "../net/Table";
import Player from "./Player";

@ccclass
export default class Desktop extends cc.Component {

    @property(cc.Label)
    RoomId: cc.Label;

    @property([Player])
    players: Player[] = [];

    owner: number;
    t_brand: Table;
    t_state: Table;

    onLoad() {
        this.t_brand = Data.it.Table("T_brand");
        this.t_state = Data.it.Table("T_state");
        this.t_brand.event.on("update", this.onBrand, this);
        this.t_state.event.on("update", this.onState, this);

        var array = this.t_brand.getList(o => o.value == 9);
        array.forEach(element => {
            console.log(element.id);
        });
        console.log("array:", array);
    }

    onBrand(event: cc.Event.EventCustom) {
        console.log(event.detail.userId);
    }

    onState(event: cc.Event.EventCustom) {
        console.log(event.detail.userId);
    }

    init(param: any[]) {
        this.RoomId.string = param[0];
        this.owner = param[1];
    }

    // called every frame, uncomment this function to activate update callback
    // update: function (dt) {

    // },

    prepare() {
        Data.it.im.Call(Protocol.NCMJ_PREPARE);
    }

    play() {

    }

    reply() {

    }

    onExit(event) {
        var code = event.detail.getByte();
        if (code == 0) {
            cc.director.loadScene("Hall");
        }
    }

    exit() {
        Data.it.im.Call(Protocol.NCMJ_EXIT, this.onExit, this);
    }
}
