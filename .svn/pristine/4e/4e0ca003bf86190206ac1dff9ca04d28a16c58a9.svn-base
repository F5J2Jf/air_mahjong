const { ccclass, property } = cc._decorator;

import Data from "../net/Data";
import Window from "../utils/Window"
import Protocol from "../net/Protocol";
import Player from "./Player";
import Desktop from "./Desktop"

@ccclass
export default class UI extends cc.Component {


    @property({ type: cc.Label })
    RoomId: cc.Label;
    @property({ type: cc.Label })
    remainingTile: cc.Label;
    @property({ type: cc.Label })
    level: cc.Label;

    @property({ type: cc.Node })
    PrepareBtn: cc.Node;


    desktop: Desktop;

    onLoad() {
    }

    init(desktop: Desktop) {
        this.desktop = desktop;
        this.RoomId.string = "房间号：" + desktop.roomId;
    }

    onData() {
        this.PrepareBtn.active = this.desktop.state.state == 0 && this.desktop.room.state == 0;
        this.level.string = "局数(" + this.desktop.room.curLevel + "/" + this.desktop.room.sumLevel + ")";
        this.remainingTile.string = "剩余(" + this.desktop.room.remainingTile + ")张";
    }

    prepare() {
        this.desktop.clear();
        Data.it.im.Call(Protocol.NCMJ_PREPARE);
    }

    exit() {
        Data.it.im.Call(Protocol.NCMJ_EXIT, null, null, 0);
    }
}
