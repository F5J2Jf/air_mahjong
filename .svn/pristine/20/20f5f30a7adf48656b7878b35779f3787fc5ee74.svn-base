const { ccclass, property } = cc._decorator;
import Tile from "./Tile";
import Tiles from "./Tiles";
import Global from "../utils/Global";
import Music from "../utils/Music";

@ccclass
export default class Player extends cc.Component {
    @property({ default: 0 })
    azimuth = 0;

    @property({ default: null, type: cc.Prefab })
    H: cc.Prefab;

    @property({ default: null, type: cc.Prefab })
    W: cc.Prefab;

    @property({ default: null, type: cc.Prefab })
    Tiles: cc.Prefab;

    @property({ default: null, type: cc.Node })
    tilesLaout: cc.Node;

    @property({ default: null, type: cc.Node })
    layout1: cc.Node;

    @property({ default: null, type: cc.Node })
    layout2: cc.Node;



    index: number;
    map: object = {};

    gs: object = {};

    push(o) {
        var tiles: Tiles = this.gs[o.order];
        if (tiles == null) {
            var tilesNode = cc.instantiate(this.Tiles);
            tiles = tilesNode.getComponent<Tiles>(Tiles);
            this.tilesLaout.addChild(tilesNode);
            this.gs[o.order] = tiles;
        }
        tiles.push(o);
    }

    Brand(o) {
        var tile: cc.Node = this.map[o.id];
        if (tile) {
            delete this.map[o.id];
            tile.destroy();
            tile = null;
        }
        if (o.index == this.index) {
            switch (o.state) {
                case 0:
                    tile = cc.instantiate(this.H);
                    this.layout1.addChild(tile);
                    tile.zIndex = o.order * 100 + o.id;
                    break;
                case 1:
                    break;
                case 2:
                    break;
                case 3://吃
                case 4://碰
                case 5://明杠
                case 6://暗杠
                case 7://胡牌TTT
                case 8://胡牌TT
                    this.push(o);
                    break;
                case 10://出牌
                    Music.voice(o.value);
                    tile = cc.instantiate(this.W);
                    this.layout2.addChild(tile);
                    break;
                case 11:
                    tile = cc.instantiate(this.W);
                    this.layout2.addChild(tile);
                    break;
            }
            if (tile != null) {
                this.map[o.id] = tile;

                var brand: Tile = tile.getComponent<Tile>(Tile);
                if (brand) {
                    brand.obj(o);
                }
            }
        }
    }


    clear() {
    }
}
