const { ccclass, property } = cc._decorator;

import Data from "../net/Data";
import Window from "../utils/Window"
import Protocol from "../net/Protocol";
import Player from "./Player";

@ccclass
export default class UI extends cc.Component {


    @property({ default: null, type: cc.Label })
    RoomId: cc.Label;

    @property({ default: null, type: cc.Node })
    PrepareBtn: cc.Node;


    @property({ default: null, type: cc.Node })
    userDefinedBtn: cc.Node;

    roomId: number;
    room: any;

    onLoad() {

    }

    init(roomId, room) {
        this.roomId = roomId;
        this.room = room;
        this.RoomId.string = roomId;
        this.userDefinedBtn.active = this.room.owner == Data.it.userId;
    }

    State(o) {
        if (o.userId == Data.it.userId) {//准备按钮
            this.PrepareBtn.active = o.state == 0;
        }
        //this.array[o.index].state(o);
    }


    prepare() {
        Data.it.im.Call(Protocol.NCMJ_PREPARE);
    }

    exit() {
        Data.it.im.Call(Protocol.NCMJ_EXIT, null, null, 0);
    }

    userDefined() {
        new Window("Shuffle");
    }
}
