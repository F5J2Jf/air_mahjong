const { ccclass, property } = cc._decorator;
import Pai from "./Pai"
import Protocol from "../net/Protocol";
import Data from "../net/Data";
import Desktop from "../desktop/Desktop";
import Window from "../utils/Window"

@ccclass
export default class TTable extends cc.Component {


    @property({ default: null, type: cc.SpriteAtlas })
    pa: cc.SpriteAtlas;

    @property({ default: null, type: cc.Node })
    img: cc.Node;

    @property({ default: null, type: cc.Node })
    jing: cc.Node;

    @property({ default: null, type: cc.Node })
    layout: cc.Node;

    @property({ default: null, type: [cc.Node] })
    layouts: cc.Node[] = [];

    array: any[];
    create(p: cc.Node) {
        var o: cc.Node = cc.instantiate(this.img);
        var pai: Pai = o.getComponent<Pai>(Pai);
        var obj = this.array.shift();
        pai.node.tag = obj.id;
        pai.init(obj.value, this.pa);
        p.addChild(o);
    }

    onLoad() {
        this.array = Desktop.it.t_tile.getList();

        cc.director.getCollisionManager().enabled = true;
        //cc.director.getCollisionManager().enabledDebugDraw = true;
        for (var j = 0; j < this.layouts.length; j++) {
            var p = this.layouts[j];
            for (var i = 0; i < 13; i++) {
                this.create(p);
            }
        }
        for (var i = 0; i < 83; i++) {
            this.create(this.layout);
        }
        this.create(this.jing);

        this.img.destroy();

    }

    init() {

    }

    onSave(event) {
        new Window("Tips", "洗牌成功");
    }

    save() {
        var arr = [];
        this.layouts.forEach(node => {
            arr.push(this.str(node));
        });
        var c = this.str(this.layout);
        var jing = this.str(this.jing);
        Data.it.im.Call(Protocol.NCMJ_SHUFFLE, this.onSave, this, arr[0], arr[1], arr[2], arr[3], c, jing);
    }

    exit() {
        this.node.destroy();
    }

    str(node: cc.Node) {
        var arr = [];
        node.children.forEach(n => {
            arr.push(n.tag)
        });
        return arr.join(",");
    }
}
