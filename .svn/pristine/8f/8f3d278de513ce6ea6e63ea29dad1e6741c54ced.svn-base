require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"CreateRoom":[function(require,module,exports){
"use strict";
cc._RF.push(module, '4ae03rdg3FKRoHsytvyv9B1', 'CreateRoom');
// Script/CreateRoom.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {
        item: {
            default: null,
            type: cc.Node
        }

    },

    // use this for initialization
    onLoad: function onLoad() {
        var data = [{ name: "游戏局数", d: ["8局(3张房卡)", "16局(6张房卡)", "24局(9张房卡)", "32局(12张房卡)"] }, { name: "人数", d: ["4人", "3人"] }, { name: "爬楼", d: ["牌爬精不爬(逐层下)", "牌爬精不爬(快速下)", "不爬楼"] }, { name: "回头一笑", d: ["上下回头", "上回头", "不回头"] }, { name: "下精玩法", d: ["同一首歌(弃牌也算)", "同一首歌(弃牌不算)", "埋地雷(弃牌也算)", "埋地雷(弃牌不算)", "翻下精", "无下精"] }, { name: "平胡", d: ["有精点炮可平胡", "有精点炮不能平胡"] }, { name: "杠精玩法", d: ["有杠精", "有杠精"] }, { name: "抄庄", d: ["抄庄", "不抄庄"] }];

        for (var i = 0; i < data.length - 1; i++) {
            var n = cc.instantiate(this.item);
            n.parent = this.item.parent;
        }

        var arr = this.item.parent.children;
        for (var key in arr) {
            this.fill(arr[key], data[key]);
        }
    },

    fill: function fill(item, itemData) {
        var labelNode = item.getChildByName("Label");
        var label = labelNode.getComponent(cc.Label);
        label.string = itemData["name"];

        var ToggleGroup = item.getChildByName("ToggleGroup");
        var toggle = ToggleGroup.getChildByName("toggle");

        for (var i = 0; i < itemData.d.length - 1; i++) {
            var n = cc.instantiate(toggle);
            n.parent = toggle.parent;
        }

        var arr = ToggleGroup.children;
        for (var key in arr) {
            console.log(key + " ===" + arr[key]);
            this.fill2(arr[key], itemData.d[key]);
        }
    },

    fill2: function fill2(item, itemData) {
        if (item !== null) {

            var labelNode = item.getChildByName("Label");
            var label = labelNode.getComponent(cc.Label);
            label.string = itemData;
        }
    },

    // called every frame, uncomment this function to activate update callback
    // update: function (dt) {

    // },

    onClick: function onClick() {},

    onClose: function onClose() {
        this.node.destroy();
    }
});

cc._RF.pop();
},{}],"Desktop":[function(require,module,exports){
"use strict";
cc._RF.push(module, 'a4842ojzuNDH7qrAwzagT4d', 'Desktop');
// Script/Desktop.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {
        // foo: {
        //    default: null,      // The default value will be used only when the component attaching
        //                           to a node for the first time
        //    url: cc.Texture2D,  // optional, default is typeof default
        //    serializable: true, // optional, default is true
        //    visible: true,      // optional, default is true
        //    displayName: 'Foo', // optional
        //    readonly: false,    // optional, default is false
        // },
        // ...
    },

    // use this for initialization
    onLoad: function onLoad() {}

});

cc._RF.pop();
},{}],"Hall":[function(require,module,exports){
"use strict";
cc._RF.push(module, '514b6VGXhRH942zc3EbFdfb', 'Hall');
// Script/Hall.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {

        IntoRoom: {
            default: null,
            type: cc.Prefab
        },
        CreateRoom: {
            default: null,
            type: cc.Prefab
        },

        UserID: {
            default: null,
            type: cc.Label
        },
        RoomCard: {
            default: null,
            type: cc.Label
        }
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.UserID.string = "ID:123456789";
        this.RoomCard.string = "34";
    },

    // called every frame, uncomment this function to activate update callback
    // update: function (dt) {

    // },

    createRoom: function createRoom() {
        var scene = cc.director.getScene();
        var node = cc.instantiate(this.CreateRoom);

        node.parent = scene;
    },

    intoRoom: function intoRoom() {
        var scene = cc.director.getScene();
        var node = cc.instantiate(this.IntoRoom);

        node.parent = scene;
    }
});

cc._RF.pop();
},{}],"IntoRoom":[function(require,module,exports){
"use strict";
cc._RF.push(module, '165f8j1j9lGP7hcNkSFzhtU', 'IntoRoom');
// Script/IntoRoom.js

'use strict';

cc.Class({
    extends: cc.Component,

    properties: {
        label: [cc.Label],
        str: ""
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.fill();
    },
    //str: "",

    fill: function fill() {
        for (i = 0; i < this.label.length; i++) {
            this.label[i].string = this.str[i];
        }
    },

    onKey: function onKey(event, value) {
        switch (value) {
            case 'D':
                if (this.str.length > 0) {
                    this.str = this.str.substr(0, this.str.length - 1);
                } else {
                    return;
                }
                break;
            case 'C':
                this.str = "";
                break;
            default:
                if (this.str.length < this.label.length) {
                    this.str += value;
                } else {
                    return;
                }

        }
        this.fill();
        console.log(this.str);
    },

    onClose: function onClose() {
        this.node.destroy();
    }
});

cc._RF.pop();
},{}],"Login":[function(require,module,exports){
"use strict";
cc._RF.push(module, '280c3rsZJJKnZ9RqbALVwtK', 'Login');
// Script/Login.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {
        label: {
            default: null,
            type: cc.Label
        },
        // defaults, set visually when attaching this script to the Canvas
        text: 'Hello, World!'
    },

    // use this for initialization
    onLoad: function onLoad() {
        //this.label.string = this.text;
    },

    // called every frame
    update: function update(dt) {},

    onLogin: function onLogin() {
        cc.director.loadScene("hall");
    }
});

cc._RF.pop();
},{}]},{},["CreateRoom","Desktop","Hall","IntoRoom","Login"])

//# sourceMappingURL=data:application/json;charset=utf-8;base64,